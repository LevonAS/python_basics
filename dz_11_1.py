"""
Реализовать класс «Дата», функция-конструктор которого должна принимать
дату в виде строки формата «день-месяц-год».
В рамках класса реализовать два метода.
Первый, с декоратором @classmethod.
Он должен извлекать число, месяц, год и преобразовывать их тип к типу «Число».
Второй, с декоратором @staticmethod, должен проводить валидацию числа, месяца
и года (например, месяц — от 1 до 12).
Проверить работу полученной структуры на реальных данных.
"""

class Date:
    def __init__(self, date):
        self.date = date
        Date.date = date

    @classmethod
    def get_num(cls):
        cls.date_s = cls.date.split("-")
        return int(cls.date_s[0]), int(cls.date_s[1]), int(cls.date_s[2])

    @staticmethod
    def valid_num(args):
        if isinstance(args, str):
            args = tuple(map(lambda x: int(x), args.split('-')))
        #print('валид дата', args[0], args[1], args[2])
        if not len(str(args[2])) in range(1,5) or args[2] == 0:
            print('Неправильное значение для года')
        elif not args[1]  in range(1,13):
            print('Неправильное значение для месяца')
        elif not args[0] in range(1,32):
            print('Неправильное значение для дня')
        elif  args[1] == 2 and args[0] > 29:
            print('В феврале не может-быть дней больше чем 29')
        elif  args[1] in [4, 6, 9, 11] and args[0] > 30:
            print('В данном месяце не может-быть дней больше чем 30')
        else:
            return True


if __name__ == '__main__':

    d = '11-1-2022'
    #d = '30-2-2022'
    #d = '31-11-2022'

    print(f'Обращение непосредственно к методу извлечения чисел из даты'
          f' get_num()\n для введённой даты {d}')
    Date(d)
    res = Date.get_num()
    print("День, имеет значение: ", res[0], "и тип данных:", type(res[0]))
    print("Месяц, имеет значение: ", res[1], "и тип данных:", type(res[0]))
    print("Год, имеет значение: ", res[2], "и тип данных:", type(res[0]))

    print()
    print('Обращение непосредственно к методу валидации даты valid_num()')
    # Обращаться к методу можно либо через установленный формат даты
    # «день-месяц-год», либо через дату в виде кортежа.
    print(f'Введённая дата {d} корректна' if Date.valid_num(d)
          else f'Введённая дата {d} некорректна' )
    dt = (30, 9, 1976)
    print(f'Введённые данные для даты {dt} корректны' if Date.valid_num(dt)
          else f'Введённые данные для даты {dt} некорректны')

#
# Обращение непосредственно к методу извлечения чисел из даты get_num()
#  для введённой даты 21-4-2022
# День, имеет значение:  21 и тип данных: <class 'int'>
# Месяц, имеет значение:  4 и тип данных: <class 'int'>
# Год, имеет значение:  2022 и тип данных: <class 'int'>
#
# Обращение непосредственно к методу валидации даты valid_num()
# В феврале не может-быть дней больше чем 29
# Введённая дата 31-2-2022 некорректна
#
# Введённая дата 31-3-2022 корректна
#
# Введённые данные для даты (30, 9, 1976) корректны
