# Есть два списка:
# tutors = [
# 'Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена'
# ]
# klasses = [
# '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А' ]

# Необходимо реализовать генератор, возвращающий кортежи вида
# (<tutor>, <klass>), например:
# Количество генерируемых кортежей не должно быть больше длины списка tutors.
# Если в списке klasses меньше элементов, чем в списке tutors,
# необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)
# Доказать, что вы создали именно генератор. Проверить его работу вплоть
# до истощения.


def gen_two(tutors_v, klasses_v):
    # Вначале дополняем список klasses элементами None,
    # доводя размер списка klasses до размера списка tutors.
    if len(tutors_v) > len(klasses_v):
        for i in range(len(tutors_v) - len(klasses_v)):
            klasses.append(None)
    # Собираем пары, выбирая индексами по одному элементу из каждого списка.
    # Количество пар ограничено длиной списка tutors.
    for i in range(len(tutors_v)):
        yield tutors_v[i], klasses_v[i]


tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис',
          'Елена'
]
klasses = ['9А', '7В', '9Б', '9В', '8Б', '10А']

gen_res = gen_two(tutors, klasses)
print(type(gen_res))
for result in gen_res:
    print(result)
