# Реализовать функцию get_jokes(), возвращающую n шуток, сформированных
# из трех случайных слов, взятых из трёх списков (по одному из каждого):
#   nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
#   adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
#   adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
# Например:
# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]
#
# Документировать код функции.
#
# Добавить еще один аргумент — флаг, разрешающий или запрещающий повторы
# слов в шутках (когда каждое слово можно использовать только в одной шутке)
# Найти возможность сделать аргументы именованными.

import random


'''
объявляем функцию генерации шуток get_jokes, у которой есть аргументы:
num - определяет количество шуток,
rep - флаг допустимости повтора слов
'''
def get_jokes(num=2, rep = False):
    # Вводятся данные трёх исходных списков слов
    nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
    adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
    adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
    null = ''
    i = 1
    result = []
    # Проверка на допустимость повтора слов в шутках
    if rep == False:
        # Формирование списка если повтор слов допустим
        # и мы не ограничены в количестве шуток
        while  i <= num:
            # Выбираем по одному случайному слову из исходных списков
            result.append(random.choice(nouns) + ' ' + random.choice(adverbs)
                          + ' ' + random.choice(adjectives))
            i += 1
        return (result)
    else:
        # В исходных данных только по пять слов в строке
        # значит неповторяющихся шуток не может быть больше пяти
        if num > 5:
            print('Количество шуток не может быть больше пяти')
        else:
            while i <= num:
                # Формирование списка если повтор слов недопустим.
                # Выбираем по одному случайному слову из исходных списков
                # а затем удаляем из исходного списка это слово.
                # При следующем проходе в исходном списе останутся только
                # неиспользованные слова
                temp_nouns = random.choice(nouns)
                nouns.remove(temp_nouns)
                temp_adverbs = random.choice(adverbs)
                adverbs.remove(temp_adverbs)
                temp_adjectives = random.choice(adjectives)
                adjectives.remove(temp_adjectives)
                result.append(temp_nouns + ' ' + temp_adverbs +
                              ' ' + temp_adjectives)
                i += 1
            return (result)
    return null


print(get_jokes())
print(get_jokes(7, rep = False))
print(get_jokes(5, True))
print(get_jokes(num=8, rep = True))

# Не понял как отключить у else в строке 41 дефолтный вывод None
# Поэтому сделал заглушку пустой строкой " return null"
